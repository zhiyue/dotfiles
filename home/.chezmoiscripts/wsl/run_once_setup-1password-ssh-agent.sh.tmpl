#!/bin/bash

# Only run this script in WSL
{{- if .is_wsl_host }}

echo "Setting up 1Password SSH agent integration for WSL..."

# Check if Windows SSH executable is available
if ! command -v ssh.exe &> /dev/null; then
    echo "Error: ssh.exe not found. Please ensure OpenSSH is installed on Windows."
    echo "You can install it from Windows Settings > Apps > Optional features > Add a feature > OpenSSH Client."
    exit 1
fi

# Check if 1Password is installed on Windows
if [ ! -d "/mnt/c/Users/{{ .chezmoi.username }}/AppData/Local/1Password" ]; then
    echo "Warning: 1Password directory not found in expected location."
    echo "Please ensure 1Password is installed on Windows and the SSH agent is enabled."
    echo "Continue anyway? (y/n)"
    read -r response
    if [[ "$response" != "y" ]]; then
        echo "Setup aborted."
        exit 1
    fi
fi

# Create .ssh directory if it doesn't exist
mkdir -p ~/.ssh
chmod 700 ~/.ssh

# Create .1password directory for the agent socket
mkdir -p ~/.1password
chmod 700 ~/.1password

# Create aliases for SSH commands in .bashrc
if ! grep -q "# 1Password SSH agent aliases" ~/.bashrc; then
    echo "" >> ~/.bashrc
    echo "# 1Password SSH agent aliases" >> ~/.bashrc
    echo "alias ssh='ssh.exe'" >> ~/.bashrc
    echo "alias ssh-add='ssh-add.exe'" >> ~/.bashrc
    echo "alias ssh-agent='ssh-agent.exe'" >> ~/.bashrc
    echo "alias ssh-keygen='ssh-keygen.exe'" >> ~/.bashrc
    echo "" >> ~/.bashrc
    echo "# 1Password SSH agent environment variables" >> ~/.bashrc
    echo "export SSH_AUTH_SOCK=~/.1password/agent.sock" >> ~/.bashrc
fi

# Also add to .zshrc if it exists
if [ -f ~/.zshrc ] && ! grep -q "# 1Password SSH agent aliases" ~/.zshrc; then
    echo "" >> ~/.zshrc
    echo "# 1Password SSH agent aliases" >> ~/.zshrc
    echo "alias ssh='ssh.exe'" >> ~/.zshrc
    echo "alias ssh-add='ssh-add.exe'" >> ~/.zshrc
    echo "alias ssh-agent='ssh-agent.exe'" >> ~/.zshrc
    echo "alias ssh-keygen='ssh-keygen.exe'" >> ~/.zshrc
    echo "" >> ~/.zshrc
    echo "# 1Password SSH agent environment variables" >> ~/.zshrc
    echo "export SSH_AUTH_SOCK=~/.1password/agent.sock" >> ~/.zshrc
fi

# Copy SSH config if it doesn't exist
if [ ! -f ~/.ssh/config ]; then
    cp {{ .chezmoi.sourceDir }}/.chezmoitemplates/dot_ssh_config.wsl ~/.ssh/config
    chmod 600 ~/.ssh/config
else
    echo "SSH config already exists. Skipping copy."
    echo "You may want to manually merge the WSL-specific settings from:"
    echo "{{ .chezmoi.sourceDir }}/.chezmoitemplates/dot_ssh_config.wsl"
fi

# Test SSH connection
echo "Testing SSH connection to 1Password agent..."
if ssh-add.exe -l &> /dev/null; then
    echo "✅ Successfully connected to 1Password SSH agent!"
else
    echo "⚠️ Could not connect to 1Password SSH agent."
    echo "Please ensure:"
    echo "1. 1Password is running on Windows"
    echo "2. SSH agent is enabled in 1Password settings"
    echo "3. You have SSH keys added to 1Password"
fi

echo "1Password SSH agent integration setup complete!"
echo "Please restart your WSL session or run 'source ~/.bashrc' to apply the changes."
echo "Remember to update your SSH public key in the gitconfig file."

{{- end }}
