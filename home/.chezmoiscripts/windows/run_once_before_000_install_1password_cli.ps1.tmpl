#!/usr/bin/env pwsh

# 设置严格错误处理
$ErrorActionPreference = "Stop"

# 定义日志函数
function Write-Log {
    param (
        [Parameter(Mandatory=$true)]
        [string]$Message,

        [Parameter(Mandatory=$false)]
        [ValidateSet("Info", "Warning", "Error", "Success")]
        [string]$Level = "Info"
    )

    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logPrefix = switch ($Level) {
        "Info"    { "[INFO]   " }
        "Warning" { "[WARNING]" }
        "Error"   { "[ERROR]  " }
        "Success" { "[SUCCESS]" }
        default    { "[INFO]   " }
    }

    Write-Host "$timestamp $logPrefix $Message"
}

Write-Log "开始执行 1Password CLI 安装脚本" "Info"
Write-Log "脚本路径: $PSCommandPath" "Info"
Write-Log "当前用户: $env:USERNAME" "Info"
Write-Log "当前系统信息: $([System.Environment]::OSVersion.VersionString)" "Info"
Write-Log "当前 PowerShell 版本: $($PSVersionTable.PSVersion)" "Info"
Write-Log "当前目录: $(Get-Location)" "Info"
Write-Log "用户主目录: $env:USERPROFILE" "Info"
Write-Log "Chezmoi 主目录: {{ .chezmoi.homeDir }}" "Info"

# 检查 1Password CLI 是否已安装
Write-Log "检查 1Password CLI 是否已安装" "Info"
$opInstalled = $false

try {
    $opVersion = op --version
    Write-Log "1Password CLI 已安装，版本: $opVersion" "Success"
    $opInstalled = $true
} catch {
    Write-Log "1Password CLI 未安装或不在 PATH 中" "Info"
}

# 如果已安装，则退出
if ($opInstalled) {
    Write-Log "1Password CLI 已安装，跳过安装步骤" "Info"
    exit 0
}

# 安装 1Password CLI
Write-Log "开始安装 1Password CLI" "Info"

try {
    # 检查 winget 是否可用
    $wingetAvailable = $false
    try {
        $wingetVersion = winget --version
        $wingetAvailable = $true
        Write-Log "检测到 winget 可用，版本: $wingetVersion" "Info"
    } catch {
        Write-Log "未检测到 winget，将尝试其他安装方法" "Warning"
    }

    if ($wingetAvailable) {
        # 使用 winget 安装 1Password CLI
        Write-Log "使用 winget 安装 1Password CLI" "Info"
        Write-Log "执行: winget install --id=AgileBits.1Password.CLI -e" "Info"

        # 执行安装命令
        $installProcess = Start-Process -FilePath "winget" -ArgumentList "install", "--id=AgileBits.1Password.CLI", "-e", "--accept-source-agreements", "--accept-package-agreements" -Wait -PassThru -NoNewWindow

        if ($installProcess.ExitCode -eq 0) {
            Write-Log "winget 安装 1Password CLI 成功" "Success"
        } else {
            Write-Log "winget 安装 1Password CLI 失败，退出代码: $($installProcess.ExitCode)" "Error"
            throw "winget 安装失败"
        }

        # 刷新环境变量
        Write-Log "刷新环境变量" "Info"
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path", "User")
    } else {
        Write-Log "winget 不可用，无法安装 1Password CLI" "Error"
        Write-Log "请安装 winget 或手动安装 1Password CLI: https://developer.1password.com/docs/cli/get-started/" "Info"
        exit 1
    }

    # 验证安装
    try {
        $opPath = Get-Command "op.exe" -ErrorAction SilentlyContinue

        if ($null -ne $opPath) {
            $installedVersion = & $opPath.Source --version
            Write-Log "1Password CLI 安装成功，版本: $installedVersion" "Success"
        } else {
            Write-Log "1Password CLI 安装可能成功，但无法在当前会话中验证" "Warning"
            Write-Log "请重新打开 PowerShell 窗口或重启计算机后再次尝试" "Warning"
        }
    } catch {
        Write-Log "验证安装时出错: $_" "Error"
        Write-Log "请重新打开 PowerShell 窗口或重启计算机后再次尝试" "Warning"
    }
} catch {
    Write-Log "安装过程中出错: $_" "Error"
    exit 1
}

Write-Log "1Password CLI 安装脚本执行完成" "Success"
Write-Log "如果安装后无法使用 op 命令，请重新打开 PowerShell 窗口或重启计算机" "Info"
